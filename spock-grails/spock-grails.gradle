import org.grails.gradle.plugin.*

apply plugin: "base"

buildscript {
  repositories { maven { url "http://repo.grails.org/grails/core" } }
  dependencies.classpath "org.grails:grails-gradle-plugin:2.0.0-SNAPSHOT"
}

class SetupGrailsProject extends Sync {
  Map props = [:]
  
  SetupGrailsProject() {
    eachFile { file ->
      if (file.name.endsWith(".in")) {
        file.expand props
        file.name = file.name[0..-4]
      }
    }
    
    doLast {
      project.file("$destinationDir/src/java").mkdirs()
    }
  }
  
  @Input
  Map getEffectiveProps() {
      props.collectEntries { [it.key.toString(), it.value.toString()] }
  }
}

project.ext.SetupGrailsProject = SetupGrailsProject
project.ext.GrailsTask = GrailsTask

ext {
  grailsDependency = { module, grailsVersion -> "org.grails:grails-$module:$grailsVersion" }
  configureBaseGrailsClasspath = { grailsVersion, bootstrapConfiguration, compileConfiguration ->
    def grailsDependenciesConfigurer = new GrailsDependenciesConfigurer(project, grailsVersion)
    grailsDependenciesConfigurer.configureBootstrapClasspath(bootstrapConfiguration)
    grailsDependenciesConfigurer.configureCompileClasspath(compileConfiguration)
  }
}

ext {
  pluginVersion = version
  pluginGrailsVersion = "2.0.0"
  pluginSpockGroovyVersion = "1.8"
  pluginSpockVersion = spockVersion(pluginSpockGroovyVersion)
}

if (isSnapshot) {
  pluginVersion += "-SNAPSHOT"
}

apply from: "gradle/plugin.gradle"
apply from: "gradle/testWithGrails20.gradle"
apply from: "gradle/testWithGrails22.gradle"

task test(dependsOn: tasks.withType(GrailsTask).matching { it.command == "test-app" })
task check(dependsOn: test)
task assemble(dependsOn: packagePlugin, overwrite: true)
task build(dependsOn: [check, assemble])

tasks.withType(GrailsTask) {
  jvmOptions {
    systemProperty "spock.building", "true"
  }
}